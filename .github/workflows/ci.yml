name: CI

on:
  push:
    branches: [main, master]
    paths: [ "lua/**", "tests/**" ]
  pull_request:

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: git pull

      - uses: rhysd/action-setup-vim@v1
        with:
          neovim: true
          version: v0.10.3
      - name: Install Dependencies
        shell: bash
        run: |
          make deps
      
      - name: Run tests
        run: |
          make test

  build:
    runs-on: ubuntu-latest
    name: Build Extras
    needs: unit-tests
    steps:
      - uses: actions/checkout@v4
      - run: git pull
      - uses: rhysd/action-setup-vim@v1
        with:
          neovim: true
          version: v0.10.3
      - name: Make Build
        run: make build

      - name: Push Changes
        if: ${{ github.event_name == 'push' }}
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore(extras): auto-generate extras"

  docs:
    runs-on: ubuntu-latest
    needs: unit-tests
    if: ${{ !failure() && github.ref == 'refs/heads/main' }}
    steps:
      - uses: actions/checkout@v4
      - run: git pull
      - uses: rhysd/action-setup-vim@v1
        with:
          neovim: true
          version: v0.10.3

      - name: Install Dependencies
        shell: bash
        run: |
          make deps

      - name: Make Docs
        shell: bash
        run: |
          make docs

      - name: Push Changes
        if: ${{ github.event_name == 'push' }}
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore(docs): auto-generate helpdocs"

  release:
    runs-on: ubuntu-latest
    needs: [docs, build]
    if: ${{ !failure() && github.ref == 'refs/heads/main' }}
    steps:
      - uses: actions/checkout@v4
      - uses: googleapis/release-please-action@v4
        id: release
        with:
          config-file: .github/release-please-config.json
          manifest-file: .github/.release-please-manifest.json

      - name: tag releases
        if: ${{ steps.release.outputs.release_created }}
        run: |
          git config user.name github-actions[bot]
          git config user.email github-actions[bot]@users.noreply.github.com
          git remote add gh-token "https://${{ secrets.GITHUB_TOKEN }}@github.com/google-github-actions/release-please-action.git"
          git tag -d stable || true
          git push origin :stable || true
          git tag -a stable -m "Last Stable Release"
          git push origin stable
